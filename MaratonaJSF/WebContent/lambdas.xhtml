<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html   xmlns="http://www.w3.org/1999/xhtml" 
		xmlns:h="http://xmlns.jcp.org/jsf/html" 
		xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
		xmlns:f="http://xmlns.jcp.org/jsf/core"
		xmlns:c= "http://xmlns.jcp.org/jsp/jstl/core"> 
<h:head>

</h:head>
<h:body>
<h1>Usando Lambdas</h1>
	
	<h:outputLabel value="#{(soma -> soma + 2) (10)}"/><br/>
	<h:outputLabel value="#{((x1,x2,x3) -> x1*x2*x3) (1,5,10)}"/><br/>
	<h:outputLabel value="#{((n1, n2) -> n2- n1)(10,20)}"/><br/>
	<h:outputLabel value="#{(x -> x*x*x) (2)}"/><br/>
	<h:outputLabel value="#{cubo=(x -> x*x*x); cubo(4)}"/><br/>
	
	<h:form id="form">
		<h:commandButton value="Calcular cubo" actionListener="#{estudanteBean.calcularCubo((x->x*x*x), 10)}"></h:commandButton>
	</h:form>
	
<h2>List View </h2>
	<ui:repeat var="nome" value="#{['Douglas','Inez','Geraldo','Igor','Tatai']}">
		<h:outputLabel value="#{nome}"/><br/>
	</ui:repeat>
	
<h2>Set View </h2>
	<ui:repeat value="#{{'Teste1','Teste2','Teste3', 'Teste3'}}"  var="nome" >
		#{nome}
	</ui:repeat>
	
<h2>Map View </h2>
	<ui:repeat var="n" value="#{{'Test': '11', 'Test2': '2', 'Test3': '3'}}">
		<ui:repeat value="#{n.entrySet().toArray()}" var="n1">
			#{n1.key}- #{n1.value}"
		</ui:repeat>
	</ui:repeat>
	
<h2>Usando Lambda com Stream</h2>
	<ui:repeat var="number" value="#{[1,3,4,6,7,8].stream().filter(x -> x > 5).toList()}">
		<h:outputLabel value="#{number}"/> <br/>
	</ui:repeat>

<!-- Criando var com JSTL -->
	<h:outputText value="Maiores que 3: "/>
	<c:set value="#{[1,2,5,6,4,8,9,10]}" var="numbers"/>
	<ui:repeat var="n" value="#{numbers.stream().filter(x -> x > 3).toList()}">
		<h:outputLabel value="#{n}"/>
	</ui:repeat><br/>
	
	<h:outputLabel value="Média: #{numbers.stream().average().get()}"/><br/>
	<h:outputLabel value="Soma:  #{numbers.stream().sum()}"/><br/>
	<h:outputLabel value="Do meu retorno, some os maiores que 5: #{numbers.stream().filter(x -> x > 5).sum()}"/>
</h:body>
</html>




















